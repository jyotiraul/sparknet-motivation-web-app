pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDENTIALS = credentials('dockerhub-cred')
        IMAGE_NAME = 'rauljyoti/motivation-web-app:latest'
        TF_VAR_docker_image = 'rauljyoti/motivation-web-app:latest'
        EC2_PUBLIC_IP = '13.127.92.121' // Updated IP from Terraform output
    }

    stages {
        stage('Check Docker Availability') {
            steps {
                echo 'Checking Docker version...'
                sh 'docker --version'
            }
        }

        stage('Clone Repository') {
            steps {
                cleanWs()
                git credentialsId: 'github-token',
                    branch: 'main',
                    url: 'https://github.com/jyotiraul/Motivation-web-app.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo 'Building Docker image...'
                    docker.build("${IMAGE_NAME}")
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    echo 'Pushing Docker image to Docker Hub...'
                    retry(3) {
                        docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-cred') {
                            def app = docker.image("${IMAGE_NAME}")
                            app.push()
                        }
                    }
                }
            }
        }

        stage('Deploy to EC2') {
            steps {
                sshagent(['ec2-ssh-key']) {
                    sh """
ssh -o StrictHostKeyChecking=no ubuntu@${EC2_PUBLIC_IP} << ENDSSH
docker rm -f motivation-app || true
docker pull ${IMAGE_NAME}
docker run -d --name motivation-app -p 80:5000 ${IMAGE_NAME}
ENDSSH
                    """
                }
            }
        }
    }

    post {
        success {
            echo '✅ Pipeline succeeded!'
        }
        failure {
            echo '❌ Pipeline failed!'
        }
        always {
            echo 'ℹ️ Pipeline execution complete.'
        }
    }

    triggers {
        githubPush()
    }
}
